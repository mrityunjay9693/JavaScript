Concatenation of Strings in JS: In JavaScript, the concatenation of strings is defined as the appending 
                                the given one or more string to the end of another string and returning a
                                new string. We can also defined it as "joining of two or more strings together
                                and returning a new string as output". String concatenation is the process or 
                                operation of joining character strings end-to-end.
                                Ex1:    str1 = "Hello"
                                        str2 = "World!"
                                        newString = str1 + str2; // process/operation of concatenation 
                                        console.log(newString);      
                                output: HelloWorld!
                                
                                Ex2:    greet1 = "Good morning,";
                                        greet2 = " Welcome to tilde!"
                                        greetMe = greet1 + " " + greet2;
                                        console.log(greetMe);
                                output: Good morning, Welcome to tilde!     

In JavaScript there are four ways to Concatenat Strings listed below: 
1]Using the: '+' Operator.
2]Using the: concat() method/function.
3]Using the: array join() method/function. 
4]Using the 'template literals'.

Now, we will see each of the above ways to concatenate the given strings one by one:

1]Using the: '+' Operator:->The '+' Operator is the most easiest/comfortable and mostly used way to concatenate the given 
                            strings. The '+' operator concatenates/merges given two or more string together. Whenever 
                            we use the plus operator to concatenate two given strings, it creates a new string by merging 
                            the strings to the left and right of the operator. 
                        ->  The '+' operator has exactly the same functionality just like we are adding two integers, we are
                            also adding two or more strings in JavaScript using '+' operator and returning a new string.

*Non-Mutative Concatenation Approach : ('+' operator)

                        Ex: let firstName = "Mrityujay";
                             let lastName = "Kumar";
                             //let fullName = firstName + lastName;
                             //console.log("Name:",fullName); // MrityunjayKumar
                             let fullName = firstName + " " + lastName;
                             console.log("Name:",fullName); // Mrityunjay Kumar   
                        
Mutative Concatenation Approach : ('+=' operator)
                        Ex:1 let cityName = "Muzaffarpur";
                             let stateName = "Bihar.";
                             let intro = "I belongs to";
                             intro += " " + cityName + ", " + stateName;
                             console.log(intro);

                        Ex:1 let countryCode = "91";
                             countryCode += " is" + "India's country code."
                             console.log(countryCode);


2]Using the: concat() method/function: String.concat() method is an another way to concatenate two or more strings. The 
                                       concat() method is used to concatenate/join/merge two or more string without 
                                       canging the original given input string and it will return a new string.
                                       The concat() method is a built-in method of JavaScript that accepts lists of strings 
                                       as parameters and returns a new string after concatenation that means combination 
                                       of all strings. If the parameters which are passed for concatenation are not strings,
                                       then concat() method will first convert the parameter which is not string into string 
                                       type and then finally the process of concatenation is done and then a new string is
                                       returned by the method. Since JavaScript is immutable in nature, original string(input string) 
                                       will not altered during the concatenation but a new string is returned as output that 
                                       has all the input strings concatenated.

        Syntax: 
                string.concat(parameter1. parameter2,... parameter_n);
                
                Where, string : variable name has input string which has to be concatenated with the strings 
                passes as parameter
                parameter1,parameter2... parameter_n : parameters passes to the method that to be concatenated. 

        Ex1: When value of input string and parameters have string type.
                let str = "Good Morning";
                let greet = str.concat(", ","Welcome to tilde.");
                console.log(greet); 
        Output: Good Morning, Welcome to tilde.

      ->We can also concatenate values of an array to the end of given string value as input. While concatenating an array's 
        value to a string, either pass the array with spread operator as parameter to concat() method, like(...arrayName) or 
        without spread operator i.e., only passing array which has string values(like str.concat(arrayName) ) to concat method
        that will unpacks all the items of the array as parameter inside concat() method.

        Ex:Ex3: Concatenation of an Array of Strings values:
                
                let citiesName = ["Lucknow", "Kolkata", "Patna", "Bangalore", "Jaipur"];
                let output = "Indian Cities: ".concat(citiesName);
                let output1 = "Indian Cities: ".concat(...citiesName);
                console.log(output);    
                console.log(output1);  
        Output: Indian Cities: Lucknow,Kolkata,Patna,Bangalore,Jaipur
                Spread operator is used-> Indian Cities: LucknowKolkataPatnaBangaloreJaipur
                